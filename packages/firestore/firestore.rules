rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /dynamicData/gameRoles {
      allow read: if true;
      allow write: if false;
    }

    match /dynamicData/devOpsMaturities {
      allow read: if true;
      allow write: if false;
    }

    match /users/{userId} {
      allow read: if userId == authUserUid();
      allow create: if userId == authUserUid() && isValidUserCreate();
    }

    function isValidUserCreate() {
      let userData = getDataToWrite();
      let allowedRoles = getDocumentData(/dynamicData/gameRoles).roles;
      let allowedMaturities = getDocumentData(/dynamicData/devOpsMaturities).maturities;

      return userData.keys().hasOnly(['role', 'devOpsMaturity', 'email'])
        && userData.email == request.auth.token.email
        && allowedRoles.hasAny([userData.role])
        && allowedMaturities.hasAny([userData.devOpsMaturity]);
    }


    function getDocumentData(documentPath) {
      return get(/databases/$(database)/documents/$(documentPath)).data;
    }

    function getDataToWrite() {
      return request.resource.data;
    }

    function authUserUid() {
      return request.auth.uid;
    }

  }
}
