{
  "rules": {
    "statuses": {
      "$uid": {
        ".read": "auth !== null",
        ".write": "auth.uid === $uid",
        ".validate": "newData.hasChildren(['state', 'gameId', 'updatedAt']) && (newData.child('state').val() === 'online' || newData.child('state').val() === 'offline') && newData.child('updatedAt').val() === now",
      }
    },
    "games": {
      "$gameId": {
        ".read": "auth !== null && root.child('statuses').child(auth.uid).child('state').val() === 'online'",
        ".write": false,
        "cards": {
          ".write": "auth !== null && root.child('statuses').child(auth.uid).child('state').val() === 'online'",
          "$cardId": {
            "position": {
              ".write": "root.child('games').child($gameId).child('cards').child($cardId).child('lockedBy').val() === auth.uid || (data.child('lockedBy').val() === null && newData.child('lockedBy').val() === auth.uid)"
            },
            "lockedBy": {
              ".write": "(data.child('lockedBy').isString() && data.child('lockedBy').val() === auth.uid && newData.child('lockedBy').val() === null) || (data.child('lockedBy').val() === null && newData.child('lockedBy').val() === auth.uid)"
            }
          }
        }
      }
    }
  }
}
